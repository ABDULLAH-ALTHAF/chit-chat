<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Private Chat</title>
    <script src="https://cdn.socket.io/4.5.4/socket.io.min.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
        }
    
        :root {
            --primary-color: #4f46e5;
            --secondary-color: #6366f1;
            --bg-color: #f8fafc;
            --text-primary: #1e293b;
            --text-secondary: #64748b;
            --border-color: #e2e8f0;
        }
    
        body {
            background: var(--bg-color);
            height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            color: var(--text-primary);
        }
    
        .app-container {
            width: 95%;
            max-width: 1400px;
            height: 90vh;
            background: white;
            border-radius: 24px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
            display: flex;
            overflow: hidden;
            position: relative;
        }
    
        /* Sidebar Styles */
        .sidebar {
            width: 320px;
            background: white;
            border-right: 1px solid var(--border-color);
            display: flex;
            flex-direction: column;
        }
    
        .user-profile {
            padding: 24px;
            border-bottom: 1px solid var(--border-color);
            display: flex;
            align-items: center;
            gap: 16px;
        }
    
        .avatar {
            width: 48px;
            height: 48px;
            background: var(--primary-color);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 600;
            font-size: 18px;
        }
    
        .users-list {
            flex: 1;
            overflow-y: auto;
            padding: 16px;
        }
    
        .user-item {
            padding: 16px;
            margin-bottom: 8px;
            border-radius: 12px;
            cursor: pointer;
            transition: all 0.2s ease;
            display: flex;
            align-items: center;
            gap: 12px;
        }
    
        .user-item:hover {
            background: var(--bg-color);
        }
    
        .user-item.active {
            background: var(--primary-color);
            color: white;
        }
    
        /* Main Chat Area */
        .main-content {
            flex: 1;
            display: flex;
            flex-direction: column;
            background: white;
        }
    
        .chat-header {
            padding: 20px;
            border-bottom: 1px solid var(--border-color);
            display: flex;
            align-items: center;
            gap: 16px;
            background: white;
        }
    
        .messages {
            flex: 1;
            padding: 24px;
            overflow-y: auto;
            background: var(--bg-color);
            display: flex;
            flex-direction: column;
            gap: 16px;
        }
    
        .message {
            max-width: 70%;
            display: flex;
            flex-direction: column;
            gap: 4px;
        }
    
        .message.sent {
            align-self: flex-end;
        }
    
        .message-bubble {
            padding: 12px 16px;
            border-radius: 16px;
            font-size: 15px;
            line-height: 1.5;
        }
    
        .sent .message-bubble {
            background: var(--primary-color);
            color: white;
            border-bottom-right-radius: 4px;
        }
    
        .received .message-bubble {
            background: white;
            border-bottom-left-radius: 4px;
        }
    
        .message-time {
            font-size: 12px;
            color: var(--text-secondary);
            margin-top: 4px;
        }
    
        .input-area {
            padding: 24px;
            background: white;
            border-top: 1px solid var(--border-color);
        }
    
        .input-container {
            display: flex;
            gap: 12px;
            background: var(--bg-color);
            padding: 12px 20px;
            border-radius: 100px;
        }
    
        input {
            flex: 1;
            border: none;
            background: none;
            font-size: 15px;
            outline: none;
            padding: 8px 0;
        }
    
        button {
            background: var(--primary-color);
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 100px;
            font-weight: 600;
            cursor: pointer;
            transition: background 0.2s;
        }
    
        button:hover {
            background: var(--secondary-color);
        }
    
        /* Menu Toggle */
        .menu-toggle {
            display: none;
            position: fixed;
            left: 20px;
            top: 19px;
            z-index: 1001;
            background: var(--primary-color);
            color: white;
            width: 43px;
            height: 43px;
            border: none;
            border-radius: 50%;
            font-size: 24px;
            cursor: pointer;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }
    
        /* Modal */
        .modal {
            position: fixed;
            inset: 0;
            background: rgba(0, 0, 0, 0.5);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 2000;
        }
    
        .modal-content {
            background: white;
            padding: 32px;
            border-radius: 24px;
            width: 90%;
            max-width: 400px;
            text-align: center;
        }
    
        .modal-content h2 {
            margin-bottom: 24px;
            color: var(--text-primary);
        }
    
        .modal-content input {
            width: 100%;
            padding: 12px 20px;
            border: 1px solid var(--border-color);
            border-radius: 12px;
            margin-bottom: 24px;
            font-size: 16px;
        }
    
        /* Mobile Styles */
        @media (max-width: 768px) {
            body {
                align-items: stretch;
                padding: 0;
            }
    
            .app-container {
                width: 100%;
                height: 100vh;
                border-radius: 0;
            }
    
            .menu-toggle {
                display: flex;
                align-items: center;
                justify-content: center;
            }
    
            .sidebar {
                position: fixed;
                left: -100%;
                top: 0;
                bottom: 0;
                width: 85%;
                max-width: 320px;
                z-index: 1000;
                transition: left 0.3s ease;
            }
    
            .sidebar.active {
                left: 0;
            }
    
            .chat-header {
                padding-left: 80px;
            }
    
            .messages {
                padding-bottom: 100px;
            }
    
            .message {
                max-width: 85%;
            }
    
            .input-area {
                position: fixed;
                bottom: 0;
                left: 0;
                right: 0;
                padding: 16px;
                background: white;
                box-shadow: 0 -4px 12px rgba(0, 0, 0, 0.05);
            }
    
            .overlay {
                display: none;
                position: fixed;
                inset: 0;
                background: rgba(0, 0, 0, 0.5);
                z-index: 999;
            }
    
            .overlay.active {
                display: block;
            }
        }
    
        /* Small Screen Adjustments */
        @media (max-width: 480px) {
            .input-container {
                padding: 8px 16px;
            }
    
            button {
                padding: 8px 16px;
            }
    
            .chat-header {
                padding: 16px 16px 16px 70px;
            }
    
            .messages {
                padding: 16px;
            }
        }
    
        /* No Chat State */
        .no-chat {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100%;
            color: var(--text-secondary);
            text-align: center;
            padding: 24px;
        }
    
        .no-chat img {
            width: 200px;
            height: 200px;
            margin-bottom: 24px;
            opacity: 0.7;
        }
        </style>

</head>
<body>

    <div id="usernameModal" class="modal">
        <div class="modal-content">
            <h2>Enter Your Name</h2>
            <input type="text" id="usernameInput" placeholder="Your name">
            <button onclick="setUsername()">Join</button>
        </div>
    </div>

    <div class="app-container" id="chatApp" style="display: none;">
        <div class="sidebar">
            <div class="user-profile">
                <div class="avatar" style="width: 30px; height: 30px;" id="userAvatar"></div>
                <div><h3 id="userName"></h3><span style="color: green;">Online</span></div>
            </div>
            <div class="users-list" id="userList"></div>
        </div>

        <div class="main-content">
            <div class="chat-header">
                <img src="https://th.bing.com/th/id/OIP.rBroxJeka0Jj81uw9g2PwAHaHa?w=196&h=196&c=7&r=0&o=5&dpr=1.3&pid=1.7" alt="profile picture" class="avatar" id="chatHeaderAvatar" width="40" height="40">
                <h3 id="currentChat">Select a user</h3>
            </div>
            <div class="messages" id="messages" style="background-image: url(https://i.pinimg.com/736x/8c/98/99/8c98994518b575bfd8c949e91d20548b.jpg); background-size: cover; background-position: center;">
                
            </div>
            <div class="input-area">
                <div class="input-container">
                    <input type="text" id="message" placeholder="Type a message...">
                    <button id="send">Send</button>
                </div>
            </div>
        </div>
    </div>
    <button class="menu-toggle" id="menuToggle">☰</button>
    <div class="overlay" id="overlay"></div>
    <script>
        const socket = io();
        let username = localStorage.getItem("username");
        let currentChatUser = null;
        let unreadMessages = new Map();
    
        function setUsername() {
            username = document.getElementById("usernameInput").value.trim();
            if (username) {
                localStorage.setItem("username", username);
                document.getElementById("usernameModal").style.display = "none";
                document.getElementById("chatApp").style.display = "flex";
                document.getElementById("userName").textContent = username;
                document.getElementById("userAvatar").textContent = username.charAt(0).toUpperCase();
                socket.emit("new-user", username);
                showNoChatMessage();
            }
        }
    
        if (username) {
            document.getElementById("usernameModal").style.display = "none";
            document.getElementById("chatApp").style.display = "flex";
            document.getElementById("userName").textContent = username;
            document.getElementById("userAvatar").textContent = username.charAt(0).toUpperCase();
            socket.emit("new-user", username);
            showNoChatMessage();
        }
    
        function sendMessage() {
            const message = document.getElementById("message").value.trim();
            if (message && currentChatUser) {
                socket.emit("send-message", { sender: username, receiver: currentChatUser, message });
                addMessage(username, message, "sent");
                document.getElementById("message").value = "";
            }
        }
    
        function addMessage(sender, message, type) {
            const msgDiv = document.createElement("div");
            msgDiv.className = `message ${type}`;
            msgDiv.innerHTML = `<div class="message-bubble">${message}</div><span class="message-info">${new Date().toLocaleTimeString()}</span>`;
            document.getElementById("messages").appendChild(msgDiv);
            hideNoChatMessage();
        }
    
        function showNoChatMessage() {
            const noChatDiv = document.createElement("div");
            noChatDiv.className = "no-chat";
            noChatDiv.innerHTML = `<img src="https://th.bing.com/th/id/R.74438b4750cc5792cce1edb5f48e5e52?rik=vCfbTX0qXVuw%2bQ&riu=http%3a%2f%2fclipart-library.com%2fimages%2frcjrbkr5i.gif&ehk=uSTUzsBNHguXhTeR%2f53fvgKzbvhqiFXyv0jbOd9pufI%3d&risl=&pid=ImgRaw&r=0" alt="no chat selected" width="250" height="250">`;
            document.getElementById("messages").appendChild(noChatDiv);
        }
    
        function hideNoChatMessage() {
            const noChatDiv = document.querySelector(".no-chat");
            if (noChatDiv) {
                noChatDiv.remove();
            }
        }
    
        socket.on("update-user-list", (users) => {
            const userList = document.getElementById("userList");
            userList.innerHTML = users
                .filter(user => user !== username)
                .map(user => `<div class="user-item" id="user-${user}" onclick="setChatUser('${user}', this)">${user}<span class="notification" id="notification-${user}" style="display: none; color: green;">🚀</span></div>`)
                .join("");
        });
    
        function setChatUser(user, element) {
            currentChatUser = user;
            document.getElementById("currentChat").textContent = user;
            document.getElementById("messages").innerHTML = "";
            hideNoChatMessage();
            
            const userItems = document.querySelectorAll('.user-item');
            userItems.forEach(item => item.classList.remove('active'));
            element.classList.add('active');
    
            socket.emit("get-messages", { sender: username, receiver: currentChatUser });
            if (unreadMessages.has(user)) {
                unreadMessages.delete(user);
                document.getElementById(`notification-${user}`).style.display = "none";
            }
        }
    
        socket.on("chat-history", (messages) => {
            if (messages.length === 0) {
                showNoChatMessage();
            } else {
                messages.forEach(msg => {
                    addMessage(msg.sender, msg.message, msg.sender === username ? "sent" : "received");
                });
            }
        });
    
        socket.on("receive-message", ({ sender, message }) => {
            if (sender === currentChatUser) {
                addMessage(sender, message, "received");
            } else {
                unreadMessages.set(sender, (unreadMessages.get(sender) || 0) + 1);
                document.getElementById(`notification-${sender}`).style.display = "flex";
            }
        });
        document.getElementById("send").addEventListener("click", sendMessage);
    
        document.getElementById("message").addEventListener("keydown", function (event) {
            if (event.key === "Enter") {
                event.preventDefault();
                sendMessage();
            }
        });

        document.getElementById('menuToggle').addEventListener('click', () => {
        document.querySelector('.sidebar').classList.toggle('active');
        document.getElementById('overlay').classList.toggle('active');
    });

    document.getElementById('overlay').addEventListener('click', () => {
        document.querySelector('.sidebar').classList.remove('active');
        document.getElementById('overlay').classList.remove('active');
    });

    // Close sidebar when selecting a user on mobile
    if (window.innerWidth <= 768) {
        document.querySelectorAll('.user-item').forEach(item => {
            item.addEventListener('click', () => {
                document.querySelector('.sidebar').classList.remove('active');
                document.getElementById('overlay').classList.remove('active');
            });
        });
    }

    // Handle window resize
    window.addEventListener('resize', () => {
        if (window.innerWidth > 768) {
            document.querySelector('.sidebar').classList.remove('active');
            document.getElementById('overlay').classList.remove('active');
        }
    });

    // Modify setChatUser function to handle mobile
    const originalSetChatUser = setChatUser;
    setChatUser = (user, element) => {
        originalSetChatUser(user, element);
        if (window.innerWidth <= 768) {
            document.querySelector('.sidebar').classList.remove('active');
            document.getElementById('overlay').classList.remove('active');
        }
    };
    </script>    
</body>
</html>
