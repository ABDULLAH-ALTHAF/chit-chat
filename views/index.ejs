<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Private Chat</title>
    <script src="https://cdn.socket.io/4.5.4/socket.io.min.js"></script>
       <style>
        * { margin: 0; padding: 0; box-sizing: border-box; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; }
        body { background-color: #f0f2f5; height: 100vh; display: flex; align-items: center; justify-content: center; }
        .app-container { width: 100%; max-width: 1200px; height: 85vh; background: white; border-radius: 16px; box-shadow: 0 2px 20px rgba(0, 0, 0, 0.1); display: flex; overflow: hidden; }
        .sidebar { width: 300px; background: #fff; border-right: 1px solid #e0e0e0; display: flex; flex-direction: column; }
        .user-profile { padding: 20px; border-bottom: 1px solid #e0e0e0; display: flex; align-items: center; gap: 12px; }
        .avatar { width: 40px; height: 40px; background: #6366f1; border-radius: 50%; display: flex; align-items: center; justify-content: center; color: white; font-weight: 500; }
        .users-list { flex: 1; overflow-y: auto; padding: 10px; }
        .user-item { padding: 12px; display: flex; align-items: center; gap: 12px; cursor: pointer; transition: background-color 0.2s; position: relative; }
        .user-item:hover { background-color: #f5f5f5; }
        .user-item.active { background-color: #f0f7ff; border-left: 3px solid #6366f1; }
        .notification { position: absolute; top: 50%; right: 10px; transform: translateY(-50%); background: rgb(40, 175, 9); color: white; border-radius: 50%; width: 20px; height: 20px; display: flex; align-items: center; justify-content: center; font-size: 1.05rem; }
        .main-content { flex: 1; display: flex; flex-direction: column; background: #ffffff; }
        .chat-header { padding: 20px; border-bottom: 1px solid #e0e0e0; display: flex; align-items: center; gap: 12px; }
        .messages { flex: 1; padding: 20px; overflow-y: auto; background: #f8fafc; }
        .message { margin-bottom: 20px; max-width: 70%; }
        .message.sent { margin-left: auto; }
        .message-bubble { padding: 12px 16px; border-radius: 12px; position: relative; font-size: 0.95rem; line-height: 1.4; }
        .sent .message-bubble { background: #6366f1; color: white; border-bottom-right-radius: 4px; }
        .received .message-bubble { background: white; color: #1f2937; border-bottom-left-radius: 4px; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05); }
        .message-info { font-size: 0.75rem; margin-top: 4px; color: #6b7280; }
        .sent .message-info { text-align: right; }
        .input-area { padding: 20px; background: white; border-top: 1px solid #e0e0e0; }
        .input-container { display: flex; gap: 10px; align-items: center; background: #f3f4f6; padding: 8px 16px; border-radius: 24px; }
        input { flex: 1; border: none; padding: 8px; font-size: 0.95rem; background: transparent; outline: none; }
        button { background: #6366f1; color: white; border: none; padding: 8px 20px; border-radius: 20px; cursor: pointer; font-weight: 500; }
        .modal { position: fixed; top: 0; left: 0; right: 0; bottom: 0; background: rgba(0, 0, 0, 0.5); display: flex; align-items: center; justify-content: center; }
        .modal-content { background: white; padding: 30px; border-radius: 12px; width: 90%; max-width: 400px; text-align: center; }
        .no-chat { text-align: center; color: #a79494; font-size: 18px; margin-top: 20px; }

        @media screen and (max-width: 768px) {
            .app-container { flex-direction: column; }
            .sidebar { width: 100%; height: 250px; }
            .main-content { flex: 1; }
            .chat-header { display: none; }
            .input-area { padding: 0; }
            .input-container { padding: 10px; }
            .input-container button { width: 100%; }
        }
    </style>
</head>
<body>

    <div id="usernameModal" class="modal">
        <div class="modal-content">
            <h2>Enter Your Name</h2>
            <input type="text" id="usernameInput" placeholder="Your name">
            <button onclick="setUsername()">Join</button>
        </div>
    </div>

    <div class="app-container" id="chatApp" style="display: none;">
        <div class="sidebar">
            <div class="user-profile">
                <div class="avatar" id="userAvatar"></div>
                <div><h3 id="userName"></h3></div>
            </div>
            <div class="users-list" id="userList"></div>
        </div>

        <div class="main-content">
            <div class="chat-header">
                <img src="https://th.bing.com/th/id/OIP.rBroxJeka0Jj81uw9g2PwAHaHa?w=196&h=196&c=7&r=0&o=5&dpr=1.3&pid=1.7" alt="profile picture" class="avatar" id="chatHeaderAvatar" width="40" height="40">
                <h3 id="currentChat">Select a user</h3>
            </div>
            <div class="messages" id="messages" style="background-image: url(https://i.pinimg.com/736x/8c/98/99/8c98994518b575bfd8c949e91d20548b.jpg); background-size: cover; background-position: center;">
                
            </div>
            <div class="input-area">
                <div class="input-container">
                    <input type="text" id="message" placeholder="Type a message...">
                    <button id="send">Send</button>
                </div>
            </div>
        </div>
    </div>
    <script>
        const socket = io();
        let username = localStorage.getItem("username");
        let currentChatUser = null;
        let unreadMessages = new Map();
    
        function setUsername() {
            username = document.getElementById("usernameInput").value.trim();
            if (username) {
                localStorage.setItem("username", username);
                document.getElementById("usernameModal").style.display = "none";
                document.getElementById("chatApp").style.display = "flex";
                document.getElementById("userName").textContent = username;
                document.getElementById("userAvatar").textContent = username.charAt(0).toUpperCase();
                socket.emit("new-user", username);
                showNoChatMessage();
            }
        }
    
        if (username) {
            document.getElementById("usernameModal").style.display = "none";
            document.getElementById("chatApp").style.display = "flex";
            document.getElementById("userName").textContent = username;
            document.getElementById("userAvatar").textContent = username.charAt(0).toUpperCase();
            socket.emit("new-user", username);
            showNoChatMessage();
        }
    
        function sendMessage() {
            const message = document.getElementById("message").value.trim();
            if (message && currentChatUser) {
                socket.emit("send-message", { sender: username, receiver: currentChatUser, message });
                addMessage(username, message, "sent");
                document.getElementById("message").value = "";
            }
        }
    
        function addMessage(sender, message, type) {
            const msgDiv = document.createElement("div");
            msgDiv.className = `message ${type}`;
            msgDiv.innerHTML = `<div class="message-bubble">${message}</div><span class="message-info">${new Date().toLocaleTimeString()}</span>`;
            document.getElementById("messages").appendChild(msgDiv);
            hideNoChatMessage();
        }
    
        function showNoChatMessage() {
            const noChatDiv = document.createElement("div");
            noChatDiv.className = "no-chat";
            noChatDiv.innerHTML = `<img src="https://th.bing.com/th/id/R.74438b4750cc5792cce1edb5f48e5e52?rik=vCfbTX0qXVuw%2bQ&riu=http%3a%2f%2fclipart-library.com%2fimages%2frcjrbkr5i.gif&ehk=uSTUzsBNHguXhTeR%2f53fvgKzbvhqiFXyv0jbOd9pufI%3d&risl=&pid=ImgRaw&r=0" alt="no chat selected" width="250" height="250">`;
            document.getElementById("messages").appendChild(noChatDiv);
        }
    
        function hideNoChatMessage() {
            const noChatDiv = document.querySelector(".no-chat");
            if (noChatDiv) {
                noChatDiv.remove();
            }
        }
    
        socket.on("update-user-list", (users) => {
            const userList = document.getElementById("userList");
            userList.innerHTML = users
                .filter(user => user !== username)
                .map(user => `<div class="user-item" id="user-${user}" onclick="setChatUser('${user}', this)">${user}<span class="notification" id="notification-${user}" style="display: none;">!</span></div>`)
                .join("");
        });
    
        function setChatUser(user, element) {
            currentChatUser = user;
            document.getElementById("currentChat").textContent = user;
            document.getElementById("messages").innerHTML = "";
            hideNoChatMessage();
            
            const userItems = document.querySelectorAll('.user-item');
            userItems.forEach(item => item.classList.remove('active'));
            element.classList.add('active');
    
            socket.emit("get-messages", { sender: username, receiver: currentChatUser });
            if (unreadMessages.has(user)) {
                unreadMessages.delete(user);
                document.getElementById(`notification-${user}`).style.display = "none";
            }
        }
    
        socket.on("chat-history", (messages) => {
            if (messages.length === 0) {
                showNoChatMessage();
            } else {
                messages.forEach(msg => {
                    addMessage(msg.sender, msg.message, msg.sender === username ? "sent" : "received");
                });
            }
        });
    
        socket.on("receive-message", ({ sender, message }) => {
            if (sender === currentChatUser) {
                addMessage(sender, message, "received");
            } else {
                unreadMessages.set(sender, (unreadMessages.get(sender) || 0) + 1);
                document.getElementById(`notification-${sender}`).style.display = "flex";
            }
        });
        document.getElementById("send").addEventListener("click", sendMessage);
    
        document.getElementById("message").addEventListener("keydown", function (event) {
            if (event.key === "Enter") {
                event.preventDefault();
                sendMessage();
            }
        });
    </script>    
</body>
</html>




